#!/usr/bin/python3
import random
import argparse

parser = argparse.ArgumentParser(
                    prog='xkcdpwgen',
                    description='Generate a secure, memorable password using the XKCD method')

parser.add_argument('-w', '--words', metavar='WORDS', type=int, default=4, help='include WORDS words in the password (default=4)')
parser.add_argument('-c', '--caps', metavar='CAPS', type=int, default=0, help='capitalize the first letter of CAPS random words (default=0)')
parser.add_argument('-n', '--numbers', metavar='NUMBERS', type=int, default=0, help='insert NUMBERS random numbers in the password (default=0)')
parser.add_argument('-s', '--symbols', metavar='SYMBOLS', type=int, default=0, help='insert SYMBOLS random symbols in the password (default=0)')
args = parser.parse_args()

# default values
words = []
pwd = ""

# returns a random word from words.txt
def randWord():
    lines = open('words.txt').read().splitlines()
    return random.choice(lines)

# inserts number or string at a random index in str
def insertRandom(str, insert):
    randIndex = random.randint(0, len(str))
    return str[0:randIndex] + insert + str[randIndex:]

for i in range(0, args.words):
    if (args.caps > 0):
        words.append(randWord().capitalize())
        args.caps -= 1
    else:
        words.append(randWord())

for i in range(0, args.words):
    w = random.choice(words)
    words.remove(w)
    pwd += w

while args.symbols > 0:
    s = random.choice(["~","!","@","#","$","%","^","&","*",".",":",";"])
    pwd = insertRandom(pwd, s)
    args.symbols -= 1

while args.numbers > 0:
    n = random.choice(["0","1","2","3","4","5","6","7","8","9"])
    pwd = insertRandom(pwd, n)
    args.numbers -= 1

print(pwd)